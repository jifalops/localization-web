//
// nn-settings.bolt
//

path /nnRssWiFi4g {
  read() { amModerator() }
  /{settings} is NnSettings;
}
path /nnRssWiFi5g {
  read() { amModerator() }
  /{settings} is NnSettings;
}
path /nnRssBt {
  read() { amModerator() }
  /{settings} is NnSettings;
}
path /nnRssBtle {
  read() { amModerator() }
  /{settings} is NnSettings;
}
path /nnTofBtHci {
  read() { amModerator() }
  /{settings} is NnSettings;
}
path /nnTofBtJava {
  read() { amModerator() }
  /{settings} is NnSettings;
}

path /activeNnRssWifi4g is NnSettings;
path /activeNnRssWifi5g is NnSettings;
path /activeNnRssBt is NnSettings;
path /activeNnRssBtle is NnSettings;
path /activeNnTofBtHci is NnSettings;
path /activeNnTofBtJava is NnSettings;

type NnSettings {
  samples: SamplesSetting
  method: CombineMethod
  drop: SamplesToDrop     // high and low
  inputs: NnInputs
  hidden: NnHidden
  maxRange: MaxRange
  weights: NnWeights
  read() { amAuthed() }
  write() { amModerator() }
}

type SamplesSetting extends Number {
  validate() { this >= 1 && this <= 100 }
}
type CombineMethod extends String {
  validate() { this.test(/^(median|mean)$/) }
}
type SamplesToDrop extends Number {
  validate() { this >= 0 && this <= 10 }
}
type NnInputs extends Number {
  validate() { this >= 1 && this <= 3 }
}
type NnHidden extends Number {
  validate() { this >= 1 && this <= 10 }
}
type MaxRange extends Number {
  validate() { this >= 5 && this <= 100 }
}
type NnWeights extends String {
  validate() { this.test(/^[0-9,\.\-]{7,1000}$/) }
}
